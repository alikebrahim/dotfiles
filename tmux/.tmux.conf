#  ████████╗███╗   ███╗██╗   ██╗██╗  ██╗     ██████╗ ██████╗ ███╗   ██╗███████╗
#  ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝    ██╔════╝██╔═══██╗████╗  ██║██╔════╝
#     ██║   ██╔████╔██║██║   ██║ ╚███╔╝     ██║     ██║   ██║██╔██╗ ██║█████╗  
#     ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗     ██║     ██║   ██║██║╚██╗██║██╔══╝  
#     ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗    ╚██████╗╚██████╔╝██║ ╚████║██║     
#     ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     
#                                                                        axmi     

# ╔════════════════════════════════════════════════════════════════════╗
# ║                           GENERAL                                  ║
# ╚════════════════════════════════════════════════════════════════════╝

# Send prefix
unbind-key C-b
set-option -g prefix C-q  # Change prefix from Ctrl-b to Ctrl-q
bind-key C-q send-prefix  # Allow sending Ctrl-q to nested tmux sessions

# Start numbering at 1 (more intuitive)
set -g base-index 1  # Start window numbering at 1
setw -g pane-base-index 1  # Start pane numbering at 1

# Mouse mode
set -g mouse on  # Enable mouse support for scrolling and pane selection

# Vi-mode keys
setw -g mode-keys vi  # Use vi keys in copy mode

# neovim compatibility
set-option -sg escape-time 10  # Reduce escape key delay for nvim
set-option -g focus-events on  # Pass focus events to applications like vim
set-option -g default-terminal "xterm-256color"  # Use 256 color terminal
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'  # Enable true color and italics

# Quality of life
set -g renumber-windows on  # Keep window numbers sequential
setw -g monitor-activity on  # Monitor activity in other windows
set -g visual-activity on  # Flash status line on activity
set -g history-limit 10000  # Keep 10000 lines of history per pane
set -g display-panes-time 2000  # Show pane numbers for 2 seconds

# ╔════════════════════════════════════════════════════════════════════╗
# ║                        NAVIGATION                                  ║
# ╚════════════════════════════════════════════════════════════════════╝

# Use Alt-vim keys to switch panes (no prefix needed)
bind -n M-h select-pane -L  # Alt+h: move left
bind -n M-j select-pane -D  # Alt+j: move down
bind -n M-k select-pane -U  # Alt+k: move up
bind -n M-l select-pane -R  # Alt+l: move right

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# ╔════════════════════════════════════════════════════════════════════╗
# ║                      PANE MANAGEMENT                               ║
# ╚════════════════════════════════════════════════════════════════════╝

# Set easier window split keys
bind-key | split-window -h -c "#{pane_current_path}"  # Split vertically, keep current directory
bind-key - split-window -v -c "#{pane_current_path}"  # Split horizontally, keep current directory
unbind '"'
unbind %

# Pane resize mode (prefix+r then hjkl)
bind r switch-client -T resize-mode  # Enter resize mode with Ctrl-q r
bind -T resize-mode h resize-pane -L 5  # Resize left by 5 columns
bind -T resize-mode j resize-pane -D 5  # Resize down by 5 rows
bind -T resize-mode k resize-pane -U 5  # Resize up by 5 rows
bind -T resize-mode l resize-pane -R 5  # Resize right by 5 columns
# Fine control with Shift
bind -T resize-mode H resize-pane -L 1  # Fine resize left by 1 column
bind -T resize-mode J resize-pane -D 1  # Fine resize down by 1 row
bind -T resize-mode K resize-pane -U 1  # Fine resize up by 1 row
bind -T resize-mode L resize-pane -R 1  # Fine resize right by 1 column

# Toggle pane zoom (maximize/restore)
bind-key z resize-pane -Z
bind-key m resize-pane -Z  # Alternative binding

# ╔════════════════════════════════════════════════════════════════════╗
# ║                       COPY MODE                                    ║
# ╚════════════════════════════════════════════════════════════════════╝

# Copy mode entry
bind Enter copy-mode  # Enter copy mode with Ctrl-q Enter

# Copy to system clipboard
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard"  # Copy to system clipboard
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard"  # Copy with 'y' key

# Visual selection
bind -T copy-mode-vi v send -X begin-selection  # Start visual selection with 'v'
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send -X rectangle-toggle  # Toggle rectangle selection with Ctrl-v
bind -T copy-mode-vi Escape send -X cancel

# Navigation in copy mode
bind -T copy-mode-vi H send -X start-of-line  # Jump to start of line with 'H'
bind -T copy-mode-vi L send -X end-of-line  # Jump to end of line with 'L'

# Incremental search in copy mode
bind-key / copy-mode \; send-key ?  # Start search with Ctrl-q /

# ╔════════════════════════════════════════════════════════════════════╗
# ║                        APPEARANCE                                  ║
# ╚════════════════════════════════════════════════════════════════════╝

# Status bar position
#set -g status-position "top"

# Status bar colorscheme: Blue background with white text
set -g status-style "bg=#005577"  # Dark blue background
set -ag status-style "fg=#ffffff"  # White text

# Alternative colorscheme: Dark gray background with light text
#set -g status-style "bg=#1c1c1c"
#set -ag status-style "fg=#e4e4e4"

# Status bar content
set -g status-left-length 40  # Increase left status length for longer session names
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"  # Show session, window, pane
set -g status-right "#[fg=yellow]#(whoami)@#H %H:%M %d-%b-%y"  # Show user@host and date/time
set -g status-interval 60  # Update status bar every 60 seconds

# Pane borders
set -g pane-active-border fg=green
set -g pane-border-lines heavy  # Use thick pane borders
set -g pane-border-style fill=black  # Fill pane borders with black
set -g pane-border-status bottom  # Show pane info at bottom of border
set -g pane-border-format ' #{pane_index} #{?#{m/r:(bash|zsh|fish|sh)$,#{pane_current_command}},#{b:pane_current_path},#{pane_current_command}} '  # Show pane index and current dir/command

# Window styles (optional background colors for active/inactive panes)
#set -g window-active-style bg='#1c1c1c' # sets bg color for active pane
#set -g window-style bg='#282828'

# Automatic window naming: show directory name when in shell, program name when running something
set-option -g automatic-rename on  # Enable automatic window renaming
set-option -g automatic-rename-format '#{?#{m/r:(bash|zsh|fish|sh)$,#{pane_current_command}},#{b:pane_current_path},#{pane_current_command}}'  # Smart naming logic

# ╔════════════════════════════════════════════════════════════════════╗
# ║                          RELOAD                                    ║
# ╚════════════════════════════════════════════════════════════════════╝

# config reload
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."  # Reload config with Ctrl-q r
